{"version":3,"sources":["components/CategoryAdd.js","Helpers/GetGifs.js","hooks/UseFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","type","value","onChange","target","GetGifs","categories","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","x","id","title","images","downsized_medium","UseFetchGifs","loading","state","setState","useEffect","then","img","setTimeout","GifGridItem","className","src","alt","GifGrid","propTypes","PropTypes","func","isRequired","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAgCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,mCACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBACFH,EAAc,IAEVH,EADc,UAAfE,EACe,GAEC,SAAAK,GAAG,OAAKL,GAAL,mBAAoBK,OAOtC,SACI,uBACIC,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAcE,EAAEM,OAAOF,e,+CCL3CG,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE0CC,UAAUH,GAFpD,8DAGYI,MAAMF,GAHlB,cAGNG,EAHM,gBAIWA,EAAUC,OAJrB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QAV5B,kBAcLM,GAdK,4CAAH,sDC6BEO,EA1BM,SAACf,GAAgB,IAAD,EAEPZ,mBAAS,CAC/BmB,KAAK,GACLS,SAAQ,IAJqB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAsBjC,OAfAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLX,KAAMc,EACNL,SAAS,MAEf,UAIZ,CAAChB,IAEIiB,GCZIM,EAXK,SAAC,GAAwB,IAAtBZ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG9B,OACI,sBAAKsB,UAAU,yCAAf,UACI,8BAAaZ,EAAb,MAAQD,GACR,qBAAKc,IAAKvB,EAAKwB,IAAKd,QCsBjBe,EA1BC,SAAC,GAAoB,IAAlB3B,EAAiB,EAAjBA,WAAiB,EAENe,EAAcf,GAAhCO,EAFwB,EAExBA,KAAMS,EAFkB,EAElBA,QAGd,OACI,qCACI,6BAAKhB,IAEJgB,GAAW,mBAAGQ,UAAU,mCAAb,uBAEZ,qBAAKA,UAAU,YAAf,SAEQjB,EAAKE,KAAI,SAAAY,GAAG,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIV,aCWjCzB,EAAY0C,UAAY,CACpBzC,cAAe0C,IAAUC,KAAKC,YAGnBC,MA5BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,oBAFvB,mBAEhBY,EAFgB,KAEJb,EAFI,KAQvB,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,oBAAIwB,GAAG,OACP,6BACKX,EAAWS,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAEjBV,WAAYU,GADPA,Y,MChBzBuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f02a73c1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setInputValue('');\r\n        if(inputValue === 'Clean'){\r\n            setCategories([]);\r\n        }else {\r\n            setCategories( cat => [inputValue, ...cat, ] )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={e => setInputValue(e.target.value)}\r\n                ></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CategoryAdd\r\n","const GetGifs = async (categories) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categories)}&limit=7&api_key=mTA21vrVuUWkIgu0Ckh0uHdnqlwKvkVw`\r\n    const respuesta = await fetch(url)\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(x => {\r\n        return {\r\n            id: x.id,\r\n            title: x.title,\r\n            url: x.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default GetGifs;","import { useEffect, useState } from \"react\"\r\nimport GetGifs from \"../Helpers/GetGifs\"\r\n\r\nconst UseFetchGifs = (categories) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        GetGifs(categories)\r\n            .then(img => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false,\r\n                    });\r\n                },200)\r\n\r\n\r\n            })\r\n    },[categories])\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default UseFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <p key={id}>{title} </p>\r\n            <img src={url} alt={title}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React, { } from 'react'\r\nimport UseFetchGifs from '../hooks/UseFetchGifs'\r\nimport GifGridItem from '../components/GifGridItem'\r\n\r\nconst GifGrid = ({ categories }) => {\r\n\r\n    const { data, loading } = UseFetchGifs( categories );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{categories}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__pulse'>Loading..</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    data.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport CategoryAdd from './components/CategoryAdd'\r\nimport PropTypes from 'prop-types'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Game of Thrones'])\r\n\r\n    // const handleSubmit = () => {\r\n    //     setCategories([...categories, 'Saga de los confines']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <CategoryAdd setCategories={setCategories}></CategoryAdd>\r\n            <hr id='hr'></hr>\r\n            <ol>\r\n                {categories.map(x => <GifGrid\r\n                    key={x}\r\n                    categories={x}\r\n                />)}\r\n\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}